{"version":3,"sources":["Components/Home.js","Components/Quiz.js","Components/Score.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","href","Quiz","props","useState","questionIndex","setQuestionIndex","history","useHistory","questions","text","answers","correctAnswer","handleButtonClick","event","target","innerText","setScore","score","console","log","length","push","class","onClick","Score","this","React","Component","App","basename","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.563662e3.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () =>{\n    return(\n        <div>\n         <div className=\"container\">\n           <h1 className=\"home_text\">Fun Trivia Games</h1>\n           <h3>\n           <br/> World Fact Quizes\n           \n           </h3>\n         <p>\n           Quiz Maker, Pop Questions!  \n         </p>\n         <a href=\"#/Quiz\" className=\"btn btn-dark\">Start Quiz</a> \n         {/* Button start quiz */}\n        </div>\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport {\n    useState\n}  from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Quiz = (props) => {\n    const [questionIndex, setQuestionIndex]= useState(0); // state variable, starts equal to 0\n    const history = useHistory();\n\n    var questions = [{\n        text: \"1. Which of the following cities was the first to open a public library?\",\n        answers: [\"a.Serville, Spain\", \"b.Warsaw, Poland\", \"c.Naples, Italy\", \"d.stuttgart, Germany\"],\n        correctAnswer: \"b.Warsaw, Poland\"\n    },\n    {\n        text: \"2. Which nation in the world consumes more Coca-Cola per capita than any other?\",\n        answers: [\"a.Mexico\", \"b.Norway\", \"c.USA\", \"d.Iceland\"], \n        correctAnswer: \"d.Iceland\"\n    },  \n    {\n         text: \"3. When did East Germany begin building the Berlin Wall?\",\n         answers: [\"a. August 13, 1962\", \"b.August 13, 1961\", \"c.September 13, 1962\", \"d.July 13, 1961\"],\n         correctAnswer:  \"b.August 13, 1961\"\n    },   \n    {\n         text: \"4.  Which is the oldest republic in the world?\",\n         answers: [\"a.Austria\", \"b.Cuba\", \"c.Argentina\", \"d.San Marino\"],\n         correctAnswer: \"d.San Marino\"\n    },  \n    {\n         text: \"5. The shortest war on record lasted ...?\",\n         answers: [\"a.1 hour\", \"b.42 minutes\", \"c.38 minutes\", \"c.55 minutes\"],\n         correctAnswer: \"c.38 minutes\"\n    }];\n\n    /**\n     * Adds 1 to questionIndex everytime a button is clicked.\n     * @param {*} event \n     */\n    function handleButtonClick(event) {\n        let answer = event.target.innerText; // the user's answer\n        let correctAnswer = questions[questionIndex].correctAnswer;\n\n        if (answer === correctAnswer) {\n            // user's answer is the same as correct answer\n            // Add 1 to the score\n            props.setScore(props.score + 1);\n        }\n        console.log(\"Current Score is:\", props.score);\n\n        if (questionIndex === questions.length - 1) { // questionIndex is on last question\n            // redirect to score page\n            history.push(\"/Score\");\n        } else {\n            setQuestionIndex(questionIndex + 1); \n        }\n    }\n    \n    return (\n        <div>\n            <div className=\"container\">\n                <h1 className=\"home_text\">Quiz</h1>\n                <h3>{questions[questionIndex].text}</h3>\n                <div class=\"container\">\n\n                    <div class=\"row row-cols-2\">\n                        <h3><div class=\"col\"><a onClick={handleButtonClick} className=\"btn btn-dark\">{questions[questionIndex].answers[0]}</a></div></h3>\n                        <h3><div class=\"col\"><a onClick={handleButtonClick} className=\"btn btn-dark\">{questions[questionIndex].answers[1]}</a></div></h3>\n                        <h3><div class=\"col\"><a onClick={handleButtonClick} className=\"btn btn-dark\">{questions[questionIndex].answers[2]}</a></div></h3>\n                        <h3><div class=\"col\"><a onClick={handleButtonClick} className=\"btn btn-dark\">{questions[questionIndex].answers[3]}</a></div></h3>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n    }\n\nexport default Quiz;","import React from 'react';\n\nclass Score extends React.Component {\n\n    // Called after the component unmounts\n    componentWillUnmount() {\n        this.props.setScore(0);\n    }\n\n    // returns what we see on the page (HTML)\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <h1 className=\"home_text\">Score</h1>\n                    <h2> {this.props.score} </h2>\n                    {this.props.score === 5 && \n                        <h3>Perfect!</h3>\n                    }\n                    <a href=\"#/Quiz\" className=\"btn btn-dark\">Retake Quiz</a> \n                </div>\n            </div>\n        )\n    } \n}\n\n\n\nexport default Score;","import React, { useState } from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport './App.css';\nimport Home from './Components/Home';\nimport Quiz from './Components/Quiz';\nimport Score from './Components/Score';\n\nfunction App() {\n  const [score, setScore] = useState(0);\n\n  return (\n    <div className='container'>\n      <div className=\"App\">\n        <Router basename=\"/\">\n          <div>\n            <Switch>\n              <Route path=\"/Quiz\">\n                <Quiz score={score} setScore={setScore}/>\n              </Route>\n              <Route path=\"/Score\">\n                <Score setScore={setScore} score={score} />\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n\n        <div>\n        </div>\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}